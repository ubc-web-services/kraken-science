{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set titleval = paragraph.field_title.value %}
{% set teaserval = paragraph.field_teaser_text.value %}
{% set styleval = paragraph.field_style.0.entity.field_class.value %}
{% set textcolourval = paragraph.field_color.0.entity.field_text_colour.value %}
{% set bgcolourval = paragraph.field_color.0.entity.field_background.value %}
{% if titleval %}
  {% set hasTitle = titleval %}
{% else %}
  {% set hasTitle = '' %}
{% endif %}
{% if teaserval %}
  {% set hasTeaser = teaserval %}
{% else %}
  {% set hasTeaser = '' %}
{% endif %}
{% if styleval %}
  {% set hasStyle = styleval %}
{% else %}
  {% set hasStyle = '' %}
{% endif %}
{% if textcolourval %}
  {% set hasTextcolour = textcolourval %}
{% else %}
  {% set hasTextcolour = '' %}
{% endif %}
{% if bgcolourval %}
  {% set hasBgcolour = bgcolourval %}
{% else %}
  {% set hasBgcolour = '' %}
{% endif %}

{% block paragraph %}
  {% block content %}
    {% embed 'kraken:masthead--simple' with {
      title: hasTitle,
      text: hasTeaser,
      style: hasStyle,
      textColor: hasTextcolour,
      backgroundColor: hasBgcolour,
    } %}
      {% block media %}
        {% if not (paragraph.field_image.isEmpty == true) and content.field_image is defined %}
          {{ content.field_image.0 }}
        {% endif %}
      {% endblock %}
    {% endembed %}
  {% endblock %}
{% endblock paragraph %}